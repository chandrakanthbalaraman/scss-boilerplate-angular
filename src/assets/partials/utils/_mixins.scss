/* ========================================================================== */
/* Color Yip */
/* ========================================================================== */
@mixin color-yiq($color, $prop: 'color') {
    $r: red($color);
    $g: green($color);
    $b: blue($color);
  
    $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;
  
    @if ($yiq >= 150) {
      #{$prop}: #111;
    } @else {
      #{$prop}: #fff;
    }
  }

@mixin box-shadow($type: 1){
    @if($type==none){
        box-shadow: none
    }
    @else{
        box-shadow: 0 1px 2px 0 rgba(34,36,38,.15); 
    }
}

@mixin btn-color($background,$border,$hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)){
    @include color-yiq($background);
    background-color: $background;
    border-color: $border;
    @include box-shadow(1);
    &:hover{
        @include color-yiq($hover-background);
        background-color: $hover-background;
        border-color: $hover-border;
    }
}

@mixin alert-color($color){
    background-color: lighten($color,38%);
    color:darken($color,25%);
    border-color: lighten($color,23%);
    @include box-shadow(1);
}

@mixin btn-outline-color($color, $active-background: $color, $active-border: $color){
    color: $color;
    background-color: transparent;
    border-color: $color;
    @include box-shadow(1);
    &:hover{
        @include color-yiq($color);
        background-color: $active-background;
        border-color: $active-border;
    }
}

@mixin transition($transition...) {
      @if length($transition) == 0 {
        transition: $transition-base;
      } @else {
        transition: $transition;
      }
    }

